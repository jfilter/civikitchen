name: Test PR

on:
  pull_request:
    branches: [main, master]
  push:
    branches: [main, master]

jobs:
  test-stable:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    name: Test stable combination (PHP 8.2 + CiviCRM 6.7.1)

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install --with-deps chromium

      - name: Build Docker image
        run: |
          PHP_VERSION=8.2 docker compose build --no-cache

      - name: Start containers
        env:
          PHP_VERSION: 8.2
          CIVICRM_VERSION: 6.7.1
          CIVICRM_SITE_TYPE: drupal10-demo
        run: |
          docker compose up -d

      - name: Wait for site to be ready
        run: |
          echo "Waiting for site to become accessible..."
          echo ""
          echo "=== Container Status ==="
          docker compose ps
          echo ""

          max_attempts=60
          attempt=0
          while [ $attempt -lt $max_attempts ]; do
            # Check if container is still running
            if ! docker compose ps | grep -q "civicrm.*running"; then
              echo "✗ Container is not running!"
              docker compose ps
              docker compose logs civicrm
              exit 1
            fi

            # Try to connect to the site
            http_code=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:8080 || echo "000")

            if [ "$http_code" = "200" ] || [ "$http_code" = "302" ]; then
              echo "✓ Site is accessible (HTTP $http_code)"
              break
            fi

            attempt=$((attempt + 1))
            echo "Waiting... ($attempt/$max_attempts) - HTTP $http_code"

            # Show more detailed logs every 10 attempts
            if [ $((attempt % 10)) -eq 0 ]; then
              echo ""
              echo "=== Progress Check (attempt $attempt) ==="
              echo "Container status:"
              docker compose ps civicrm
              echo ""
              echo "Last 15 lines of container output:"
              docker compose logs --tail=15 civicrm
              echo "=== End Progress Check ==="
              echo ""
            fi

            sleep 10
          done

          if [ $attempt -eq $max_attempts ]; then
            echo "✗ Site failed to become accessible after $max_attempts attempts"
            echo ""
            echo "=== Final Container Status ==="
            docker compose ps
            echo ""
            echo "=== Full Container Logs ==="
            docker compose logs civicrm
            exit 1
          fi

      - name: Run Playwright tests
        env:
          SKIP_WEBSERVER: 1
        run: npm test

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: |
            test-results/
            playwright-report/
          retention-days: 7

      - name: Show logs on failure
        if: failure()
        run: |
          echo "=== CiviCRM Container Logs ==="
          docker compose logs civicrm
          echo "=== MySQL Container Logs ==="
          docker compose logs mysql

      - name: Stop containers
        if: always()
        run: docker compose down -v
